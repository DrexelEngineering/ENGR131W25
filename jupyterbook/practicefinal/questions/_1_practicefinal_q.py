from pykubegrader.widgets.select_many import MultiSelect, SelectMany
from pykubegrader.widgets.multiple_choice import MCQuestion, MCQ
import pykubegrader.initialize
import panel as pn

pn.extension()

class Question1(MCQuestion):
    def __init__(self):
        super().__init__(
            title=f"Select the Best Answer",
            style=MCQ,
            question_number=1,
            keys=['q1-1-what-is-the-output-of-the-following-code', 'q1-2-what-datatype-has-the-highest-precision', 'q1-3-object-oriented-programming-in-python', 'q1-4-control-structures-in-python', 'q1-5-inheritance-in-python', 'q1-6-ethical-plotting-in-python', 'q1-7-machine-learning-overfitting', 'q1-8-abstract-methods-in-python', 'q1-9-scope-of-variables-in-classes', 'q1-10-image-analysis-package'],
            options=[['The standard deviation of the array is 5.937', 'The standard deviation of the array is 5.938', 'The standard deviation of the array is 6.000', '5.937978766948792', '5.94', '5', 'None'], ['np.float32', 'np.float64', 'np.float16', 'np.float8', 'np.int16', 'np.int32', 'np.float128'], ['Polymorphism', 'Recursion', 'Functional composition', 'Dictionary unpacking'], ['if', 'for', 'while', 'lambda'], ['Python supports multiple inheritance.', 'A child class cannot override the `__init__` method of its parent class.', 'A child class automatically has private access to all attributes of its parent class.', 'Inheritance in Python is limited to single inheritance only.'], ['Ensuring color accessibility and consistent axis labeling', 'Intensifying differences in the data by stretching the y-axis', 'Omitting outliers to make the data look more uniform', 'Using only grayscale plots to avoid confusion'], ['Overfitting can be mitigated by techniques such as regularization or cross-validation.', 'Overfitting is not a concern if the training loss goes to zero.', 'Overfitting always improves performance on unseen data.', 'Overfitting cannot happen with large datasets.'], ['They force subclasses to provide implementations for these methods.', 'They allow partial instantiation of abstract classes.', 'They serve as optional hooks that subclasses may ignore.', 'They allow overriding built-in methods dynamically.'], ['Class variables are shared across all instances, while instance variables are unique to each instance.', 'Instance variables are shared across all instances, while class variables are unique to each instance.', 'Both instance and class variables are unique to each object instance.', 'Neither instance nor class variables exist in Python.'], ['scikit-image', 'pic-flow', 'visionlib', 'img-sci']],
            descriptions=['What is the output of the following code?**\n```python\nimport numpy as np\na = np.array([2.5, 4, 6.2, 7.9, 13.3, 15, 20])\na = a.reshape((1, -1))\nprint(f"The standard deviation of the array is {np.std(a):.3f}")\n```', 'What datatype has the highest precision (assuming your NumPy build supports it)?', 'Which of the following is a fundamental concept of object-oriented programming in Python?', 'Which of the following is NOT a control structure in Python?', 'Which of the following statements about inheritance in Python is true?', 'Which approach is essential for ethical data visualization in Python?', 'Which of the following statements about overfitting in machine learning is correct?', 'What is the main purpose of abstract methods in Python?', 'Which of the following statements about variable scope in Python classes is true?', 'Which package is commonly used for image processing in Python, alongside OpenCV?'],
            points=[2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0],
        )
class Question2(SelectMany):
    def __init__(self):
        super().__init__(
            title=f"Select All That Apply",
            style=MultiSelect,
            question_number=2,
            keys=['q2-1-python-objects', 'q2-2-python-data-structures', 'q2-3-python-lists', 'q2-4-python-dictionaries', 'q2-5-python-mutability', 'q2-6-floating-point-numbers', 'q2-7-python-classes', 'q2-8-continue-break-else', 'q2-9-python-inheritance', 'q2-10-valid-python-syntax', 'q2-11-machine-learning'],
            descriptions=['Which of the following are considered objects in Python 3?', 'Which of the following are built-in data structures in Python?', 'Which of the following statements about Python lists are true?', 'Which of the following can serve as valid dictionary values in Python?', 'Which of the following are mutable in Python?', 'Which of the following are true regarding floating-point numbers in Python?', 'Which of the following are true about classes in Python?', 'Which Python statements are valid for controlling loop flow or providing post-loop code blocks?', 'Which of the following are true about inheritance in Python?', 'Which of the following are valid Python syntax (exclude the backticks ` in your judgment)?', 'Which of the following are true about machine learning concepts?'],
            options=[['Integer', 'String', 'Decorator', 'Bytes', 'Module', 'Class', 'Exception'], ['List', 'Dictionary', 'Tuple', 'Set', 'FrozenSet', 'DataFrame'], ['They are mutable.', 'They support slicing operations.', 'They must only contain a single data type.', 'They cannot be nested.'], ['Another dictionary', 'A custom class instance', 'A lambda function', 'A built-in function like `len`', 'A module object'], ['bytearray', 'List', 'Tuple', 'String', 'Dictionary'], ['They follow the IEEE standard in most implementations.', 'They can cause precision issues due to binary representation.', 'They are always 100% accurate for any decimal fraction.', 'They are immutable.'], ['They can define both instance methods and class methods.', 'They cannot contain static methods.', 'They can utilize decorators like `@classmethod` and `@staticmethod`.', 'They are defined using the `class` keyword.'], ['`break`', '`continue`', '`for`', '`then`', '`else`'], ['A class can inherit from multiple classes using parentheses.', 'The `super()` function can be used to call parent class methods.', 'Method overriding is disallowed to preserve the parent class code.', 'Private attributes of a parent class become automatically accessible to the child class.'], ['`try:`', '`while x < 10:`', '`def my_func():`', '`for x in range(10)`', '`if y == 20:`', "`with open('file.txt') as f:`", '`except ValueError:`', '`class = MyClass`'], ['Both gradient descent and stochastic gradient descent are optimization methods.', 'Feature engineering can significantly impact model performance.', 'Neural networks cannot approximate non-linear functions.', 'Ensemble methods can help reduce variance and improve generalization.']],
            points=[4.0, 4.0, 4.0, 4.0, 4.0, 4.0, 4.0, 4.0, 4.0, 4.0, 4.0],
            grade=['parts'],
        )
class Question7(SelectMany):
    def __init__(self):
        super().__init__(
            title=f"Select All That Apply",
            style=MultiSelect,
            question_number=7,
            keys=['q7-1-Model-Performance', 'q7-2-Model-Improvements'],
            descriptions=['What statements are true about model performance?** (Select all that apply)', 'What statements are true about model performance?** (Select all that apply)'],
            options=[['The model is very accurate at predicting cats on the training dataset', 'The model is very accurate at predicting dogs on the training dataset', 'The model is very accurate at predicting cats on the test dataset', 'The model is very accurate at predicting dogs on the test dataset', 'The model is useful for predicting cats and dogs', 'The model is overfit to the training data', 'The model is a unsupervised model'], ['The model might be improved by adding more training data', 'The model might be improved by adding more testing data', 'The model might be improved by optimizing the model for longer', 'The model might be improved using a different model', 'The model might be improved using data augmentation to manipulate the training data', 'The model might be improved by adding regularization methods to the model', 'The model might be improved by using higher resolution images', 'Edges are the best features for classifying cats and dogs', 'The model performance would be improved by using higher resolution images', 'The model would be improved by using color images', 'Using a different seed for training is likely to significantly improve the model performance']],
            points=[10.0, 10.0],
            grade=['parts'],
        )
class Question1(MCQuestion):
    def __init__(self):
        super().__init__(
            title=f"Select the Best Answer",
            style=MCQ,
            question_number=1,
            keys=['q1-1-what-is-the-output-of-the-following-code', 'q1-2-what-datatype-has-the-highest-precision', 'q1-3-object-oriented-programming-in-python', 'q1-4-control-structures-in-python', 'q1-5-inheritance-in-python', 'q1-6-ethical-plotting-in-python', 'q1-7-machine-learning-overfitting', 'q1-8-abstract-methods-in-python', 'q1-9-scope-of-variables-in-classes', 'q1-10-image-analysis-package'],
            options=[['The standard deviation of the array is 5.937', 'The standard deviation of the array is 5.938', 'The standard deviation of the array is 6.000', '5.937978766948792', '5.94', '5', 'None'], ['np.float32', 'np.float64', 'np.float16', 'np.float8', 'np.int16', 'np.int32', 'np.float128'], ['Polymorphism', 'Recursion', 'Functional composition', 'Dictionary unpacking'], ['if', 'for', 'while', 'lambda'], ['Python supports multiple inheritance.', 'A child class cannot override the `__init__` method of its parent class.', 'A child class automatically has private access to all attributes of its parent class.', 'Inheritance in Python is limited to single inheritance only.'], ['Ensuring color accessibility and consistent axis labeling', 'Intensifying differences in the data by stretching the y-axis', 'Omitting outliers to make the data look more uniform', 'Using only grayscale plots to avoid confusion'], ['Overfitting can be mitigated by techniques such as regularization or cross-validation.', 'Overfitting is not a concern if the training loss goes to zero.', 'Overfitting always improves performance on unseen data.', 'Overfitting cannot happen with large datasets.'], ['They force subclasses to provide implementations for these methods.', 'They allow partial instantiation of abstract classes.', 'They serve as optional hooks that subclasses may ignore.', 'They allow overriding built-in methods dynamically.'], ['Class variables are shared across all instances, while instance variables are unique to each instance.', 'Instance variables are shared across all instances, while class variables are unique to each instance.', 'Both instance and class variables are unique to each object instance.', 'Neither instance nor class variables exist in Python.'], ['scikit-image', 'pic-flow', 'visionlib', 'img-sci']],
            descriptions=['What is the output of the following code?**\n```python\nimport numpy as np\na = np.array([2.5, 4, 6.2, 7.9, 13.3, 15, 20])\na = a.reshape((1, -1))\nprint(f"The standard deviation of the array is {np.std(a):.3f}")\n```', 'What datatype has the highest precision (assuming your NumPy build supports it)?', 'Which of the following is a fundamental concept of object-oriented programming in Python?', 'Which of the following is NOT a control structure in Python?', 'Which of the following statements about inheritance in Python is true?', 'Which approach is essential for ethical data visualization in Python?', 'Which of the following statements about overfitting in machine learning is correct?', 'What is the main purpose of abstract methods in Python?', 'Which of the following statements about variable scope in Python classes is true?', 'Which package is commonly used for image processing in Python, alongside OpenCV?'],
            points=[2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0],
        )
class Question2(SelectMany):
    def __init__(self):
        super().__init__(
            title=f"Select All That Apply",
            style=MultiSelect,
            question_number=2,
            keys=['q2-1-python-objects', 'q2-2-python-data-structures', 'q2-3-python-lists', 'q2-4-python-dictionaries', 'q2-5-python-mutability', 'q2-6-floating-point-numbers', 'q2-7-python-classes', 'q2-8-continue-break-else', 'q2-9-python-inheritance', 'q2-10-valid-python-syntax', 'q2-11-machine-learning'],
            descriptions=['Which of the following are considered objects in Python 3?', 'Which of the following are built-in data structures in Python?', 'Which of the following statements about Python lists are true?', 'Which of the following can serve as valid dictionary values in Python?', 'Which of the following are mutable in Python?', 'Which of the following are true regarding floating-point numbers in Python?', 'Which of the following are true about classes in Python?', 'Which Python statements are valid for controlling loop flow or providing post-loop code blocks?', 'Which of the following are true about inheritance in Python?', 'Which of the following are valid Python syntax (exclude the backticks ` in your judgment)?', 'Which of the following are true about machine learning concepts?'],
            options=[['Integer', 'String', 'Decorator', 'Bytes', 'Module', 'Class', 'Exception'], ['List', 'Dictionary', 'Tuple', 'Set', 'FrozenSet', 'DataFrame'], ['They are mutable.', 'They support slicing operations.', 'They must only contain a single data type.', 'They cannot be nested.'], ['Another dictionary', 'A custom class instance', 'A lambda function', 'A built-in function like `len`', 'A module object'], ['bytearray', 'List', 'Tuple', 'String', 'Dictionary'], ['They follow the IEEE standard in most implementations.', 'They can cause precision issues due to binary representation.', 'They are always 100% accurate for any decimal fraction.', 'They are immutable.'], ['They can define both instance methods and class methods.', 'They cannot contain static methods.', 'They can utilize decorators like `@classmethod` and `@staticmethod`.', 'They are defined using the `class` keyword.'], ['`break`', '`continue`', '`for`', '`then`', '`else`'], ['A class can inherit from multiple classes using parentheses.', 'The `super()` function can be used to call parent class methods.', 'Method overriding is disallowed to preserve the parent class code.', 'Private attributes of a parent class become automatically accessible to the child class.'], ['`try:`', '`while x < 10:`', '`def my_func():`', '`for x in range(10)`', '`if y == 20:`', "`with open('file.txt') as f:`", '`except ValueError:`', '`class = MyClass`'], ['Both gradient descent and stochastic gradient descent are optimization methods.', 'Feature engineering can significantly impact model performance.', 'Neural networks cannot approximate non-linear functions.', 'Ensemble methods can help reduce variance and improve generalization.']],
            points=[4.0, 4.0, 4.0, 4.0, 4.0, 4.0, 4.0, 4.0, 4.0, 4.0, 4.0],
            grade=['parts'],
        )
class Question7(SelectMany):
    def __init__(self):
        super().__init__(
            title=f"Select All That Apply",
            style=MultiSelect,
            question_number=7,
            keys=['q7-1-Model-Performance', 'q7-2-Model-Improvements'],
            descriptions=['What statements are true about model performance?** (Select all that apply)', 'What statements are true about model performance?** (Select all that apply)'],
            options=[['The model is very accurate at predicting cats on the training dataset', 'The model is very accurate at predicting dogs on the training dataset', 'The model is very accurate at predicting cats on the test dataset', 'The model is very accurate at predicting dogs on the test dataset', 'The model is useful for predicting cats and dogs', 'The model is overfit to the training data', 'The model is a unsupervised model'], ['The model might be improved by adding more training data', 'The model might be improved by adding more testing data', 'The model might be improved by optimizing the model for longer', 'The model might be improved using a different model', 'The model might be improved using data augmentation to manipulate the training data', 'The model might be improved by adding regularization methods to the model', 'The model might be improved by using higher resolution images', 'Edges are the best features for classifying cats and dogs', 'The model performance would be improved by using higher resolution images', 'The model would be improved by using color images', 'Using a different seed for training is likely to significantly improve the model performance']],
            points=[10.0, 10.0],
            grade=['parts'],
        )
